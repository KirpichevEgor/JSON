JSON
 4. Создать внешний репозиторий c названием JSON.
Заходим в свой профиль на гитхабе
Нажимаем в право левом углу на плюсик
Выбираем пункт: Create new repositories
Присваиваем название JSON
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/KirpichevEgor/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json
 7. Добавить файл под гит.
git status
git add new.json

 8. Закоммитить файл.
git commit -m "first json"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
i
{
"ФИО":"Кирпичев Егор Анатольевич",
"Возраст":"29",
"Количество домашних животны":"0",
"Будущая желаемая зарплата":"500 USD",
}
ESC 
:wq

 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "changing in JSON"
git push

 12. Создать файл preferences.json

touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences. json
i
{
"Любимый фильм":"1+1",
"Любимый сериал":"Остаться в живых",
"Любимая еда":"Пельмени",
"Любимое время года":"Лето",
"Страна в которую хотели бы посетить":"США",
}
ESC
:wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

touch sklls.json
vim sklls.json
i

{
"Теория":"Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.",
"Инструменты тестирования":
[
    "Postman",
	"Git",
	"Charles",
	"Jmeter",
	"Android Studio"
],
"Основы SQL":
[
    "Create", 
    "Delete", 
	"Drop", 
	"Insert Into", 
	"Select", 
	"From", 
	"Where","Join"
],

"Язык программирования":"Python"
}
ESC
:wq

 15. Отправить сразу 2 файла на внешний репозиторий.

git add .
git commit -am "couple commit json"
git push

 16. На веб интерфейсе создать файл bug_report.json.
Заходим на внешний репозиторий
Нажимаем кнопку Add file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе
Нажимаем кнопку "Commit new file"
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Выбираем файл bug_reports.json
Нажимаем на значек карандаша справа

{
"Название":"Не работает кнопка добавления товара в корзину",
"Шаги по воспроизведению":{
        "1":"Открыть сайт",
        "2":"Зайди в раздел с товаром",
        "3":"Открыть товар",
        "4":"Нажать на 'Добавить товар в корзину'"
},
"Фактический результат":"Товар не добавляется в корзину",
"Ожидаемый результат":"Товар добавлен в корзину"
}


 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

Даем название нашему комминту "Our bag"
Нажимаем кнопку "Commit new file"
 20. Синхронизировать внешний и локальный репозиторий JSON
git fetch
git pull
